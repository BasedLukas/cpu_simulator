ALU:

Input1, Input 2 are lists of booleans [1,1,1,1,1,1,1,1]
control1 | control2 : booleans
-------------------
0        | 0        = Add
0        | 1        = Or
1        | 0        = Subtract
1        | 1        = And
Methods:
out()  
zero() = True if all the output is False
negative() = True if the number is negative (signed MSB) Not currently used
overflow() = True if the number is overflowed when doing addition
carry_out() = True if the number is overflowed when doing subtraction (in2 > in1) 
subtraction: input1 - input2 = output 


Decoder:

input = list of booleans [1,0,1,0,1,1,1,1]

3 bit decoder, uses the 3 MSB in the input
output is a list of 8 bits where 0 is MSB and 7 is LSB"""
example above would output 5 = [0,0,0,0,0,1,0,0]

Mux8bit:

Takes 2 boolean lists as input 1 and 2
Takes a single control boolean input
If control True output() is input1 
If control False output() is input2

Pilot:
Pilot for where project is heading, not fully based on logic gates.

code (3 MSB)
 000 = move
 001 = add
 010 = subtract
 011 = and
 100 = or

Operands (next 4 MSB for 2 operands)
 00 = register 0
 01 = register 2
 10 = register 3
 11 = register 4

 destination for arithmetic operations (LSB)
 0 = register 0
 1 = register 1

 [0,0,0,1,1,0,0,0] = mov from reg4 to reg0